###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        29/Feb/2016  22:04:40
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\b51443\Desktop\FRDM_KL03Z\kl03-frdm-demo\src\cpu\start.c
#    Command line =  
#        C:\Users\b51443\Desktop\FRDM_KL03Z\kl03-frdm-demo\src\cpu\start.c -D
#        IAR -D FREEDOM -lCN
#        C:\Users\b51443\Desktop\FRDM_KL03Z\kl03-frdm-demo\build\iar\platinum\FLASH_32KB\List\
#        -o
#        C:\Users\b51443\Desktop\FRDM_KL03Z\kl03-frdm-demo\build\iar\platinum\FLASH_32KB\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\b51443\Desktop\FRDM_KL03Z\kl03-frdm-demo\build\iar\platinum\..\..\..\src\projects\platinum\
#        -I
#        C:\Users\b51443\Desktop\FRDM_KL03Z\kl03-frdm-demo\build\iar\platinum\..\..\..\src\common\
#        -I
#        C:\Users\b51443\Desktop\FRDM_KL03Z\kl03-frdm-demo\build\iar\platinum\..\..\..\src\cpu\
#        -I
#        C:\Users\b51443\Desktop\FRDM_KL03Z\kl03-frdm-demo\build\iar\platinum\..\..\..\src\cpu\headers\
#        -I
#        C:\Users\b51443\Desktop\FRDM_KL03Z\kl03-frdm-demo\build\iar\platinum\..\..\..\src\drivers\lptmr\
#        -I
#        C:\Users\b51443\Desktop\FRDM_KL03Z\kl03-frdm-demo\build\iar\platinum\..\..\..\src\drivers\mcg\
#        -I
#        C:\Users\b51443\Desktop\FRDM_KL03Z\kl03-frdm-demo\build\iar\platinum\..\..\..\src\drivers\pmc\
#        -I
#        C:\Users\b51443\Desktop\FRDM_KL03Z\kl03-frdm-demo\build\iar\platinum\..\..\..\src\drivers\rcm\
#        -I
#        C:\Users\b51443\Desktop\FRDM_KL03Z\kl03-frdm-demo\build\iar\platinum\..\..\..\src\drivers\smc\
#        -I
#        C:\Users\b51443\Desktop\FRDM_KL03Z\kl03-frdm-demo\build\iar\platinum\..\..\..\src\drivers\uart\
#        -I
#        C:\Users\b51443\Desktop\FRDM_KL03Z\kl03-frdm-demo\build\iar\platinum\..\..\..\src\drivers\wdog\
#        -I
#        C:\Users\b51443\Desktop\FRDM_KL03Z\kl03-frdm-demo\build\iar\platinum\..\..\..\src\drivers\cmp\
#        -I
#        C:\Users\b51443\Desktop\FRDM_KL03Z\kl03-frdm-demo\build\iar\platinum\..\..\..\src\platforms\
#        -I
#        C:\Users\b51443\Desktop\FRDM_KL03Z\kl03-frdm-demo\build\iar\platinum\..\
#        -Ol --use_c++_inline
#    List file    =  
#        C:\Users\b51443\Desktop\FRDM_KL03Z\kl03-frdm-demo\build\iar\platinum\FLASH_32KB\List\start.lst
#    Object file  =  
#        C:\Users\b51443\Desktop\FRDM_KL03Z\kl03-frdm-demo\build\iar\platinum\FLASH_32KB\Obj\start.o
#
###############################################################################

C:\Users\b51443\Desktop\FRDM_KL03Z\kl03-frdm-demo\src\cpu\start.c
      1          /*
      2           * File:	start.c
      3           * Purpose:	Kinetis start up routines. 
      4           *
      5           * Notes:		
      6           */
      7          
      8          #include "start.h"
      9          #include "common.h"
     10          #include "sysinit.h"
     11          #include "rcm.h"
     12          #include "startup.h"
     13          /********************************************************************/
     14          /*!
     15           * \brief   Kinetis Start
     16           * \return  None
     17           *
     18           * This function calls all of the needed starup routines and then 
     19           * branches to the main process.
     20           */
     21           

   \                                 In section .text, align 2, keep-with-next
     22           void SystemInit (void)
     23          {
   \                     SystemInit: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     24          	 start();
   \   00000002   0x.... 0x....      BL       start
     25          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
     26          void start(void)
     27          { 
   \                     start: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     28            /* Disable the watchdog timer */
     29            SIM_COPC = 0x00;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x....             LDR      R1,??DataTable1  ;; 0x40048100
   \   00000006   0x6008             STR      R0,[R1, #+0]
     30            /* Copy any vector or data sections that need to be in RAM */
     31          #ifndef CMSIS    // If conforming to CMSIS, we do not need to perform this code
     32          #ifndef BOOTLOADER
     33          	/* Copy any vector or data sections that need to be in RAM */
     34          	common_startup();
   \   00000008   0x.... 0x....      BL       common_startup
     35          #endif
     36          #endif
     37            /* Perform processor initialization */
     38            sysinit();
   \   0000000C   0x.... 0x....      BL       sysinit
     39          #ifndef BOOTLOADER      
     40          //  printf("                \r\n");
     41            /* Determine the last cause(s) of reset */
     42            outSRS();	
   \   00000010   0x.... 0x....      BL       outSRS
     43            /* Determine specific Kinetis device and revision */
     44            cpu_identify();
   \   00000014   0x.... 0x....      BL       cpu_identify
     45          #endif	
     46          
     47          /* in KEIL, should not call main, but in starup_MKL05Z4.s Reset_Handler */
     48          #ifndef KEIL    
     49            /* Jump to main process */
     50            main();
   \   00000018   0x.... 0x....      BL       main
     51            /* No actions to perform after this so wait forever */
     52            while(1);
   \                     ??start_0: (+1)
   \   0000001C   0xE7FE             B        ??start_0
     53          #endif
     54          }
     55          /********************************************************************/
     56          /*!
     57           * \brief   Kinetis Identify
     58           * \return  None
     59           *
     60           * This is primarly a reporting function that displays information
     61           * about the specific CPU to the default terminal including:
     62           * - Kinetis family
     63           * - package
     64           * - die revision
     65           * - P-flash size
     66           * - Ram size
     67           */

   \                                 In section .text, align 2, keep-with-next
     68          void cpu_identify (void)
     69          {
   \                     cpu_identify: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     70            uint16 temp;
     71              /* Determine the Kinetis family */
     72              switch((SIM_SDID & SIM_SDID_FAMID(0x7))>>SIM_SDID_FAMID_SHIFT) 
   \   00000002   0x....             LDR      R0,??DataTable1_1  ;; 0x40048024
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x0F00             LSRS     R0,R0,#+28
   \   00000008   0x0740             LSLS     R0,R0,#+29       ;; ZeroExtS R0,R0,#+29,#+29
   \   0000000A   0x0F40             LSRS     R0,R0,#+29
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD006             BEQ      ??cpu_identify_0
   \   00000010   0x2802             CMP      R0,#+2
   \   00000012   0xD00C             BEQ      ??cpu_identify_1
   \   00000014   0xD307             BCC      ??cpu_identify_2
   \   00000016   0x2804             CMP      R0,#+4
   \   00000018   0xD011             BEQ      ??cpu_identify_3
   \   0000001A   0xD30C             BCC      ??cpu_identify_4
   \   0000001C   0xE013             B        ??cpu_identify_5
     73              {  
     74              	case 0x0:
     75              		printf("\nKL0");
   \                     ??cpu_identify_0: (+1)
   \   0000001E   0x....             LDR      R0,??DataTable1_2
   \   00000020   0x.... 0x....      BL       printf
     76              		break;
   \   00000024   0xE012             B        ??cpu_identify_6
     77              	case 0x1:
     78              		printf("\nKL1");
   \                     ??cpu_identify_2: (+1)
   \   00000026   0x....             LDR      R0,??DataTable1_3
   \   00000028   0x.... 0x....      BL       printf
     79              		break;
   \   0000002C   0xE00E             B        ??cpu_identify_6
     80              	case 0x2:
     81              		printf("\nKL2");
   \                     ??cpu_identify_1: (+1)
   \   0000002E   0x....             LDR      R0,??DataTable1_4
   \   00000030   0x.... 0x....      BL       printf
     82              		break;
   \   00000034   0xE00A             B        ??cpu_identify_6
     83              	case 0x3:
     84              		printf("\nKL3");
   \                     ??cpu_identify_4: (+1)
   \   00000036   0x....             LDR      R0,??DataTable1_5
   \   00000038   0x.... 0x....      BL       printf
     85              		break;
   \   0000003C   0xE006             B        ??cpu_identify_6
     86              	case 0x4:
     87              		printf("\nKL4");
   \                     ??cpu_identify_3: (+1)
   \   0000003E   0x....             LDR      R0,??DataTable1_6
   \   00000040   0x.... 0x....      BL       printf
     88              		break;
   \   00000044   0xE002             B        ??cpu_identify_6
     89          	default:
     90          		printf("\nUnrecognized Kinetis family device.\n");  
   \                     ??cpu_identify_5: (+1)
   \   00000046   0x....             LDR      R0,??DataTable1_7
   \   00000048   0x.... 0x....      BL       printf
     91          		break;  	
     92              }
     93              
     94              /* Determine Sub-Family ID */
     95              switch((SIM_SDID & SIM_SDID_SUBFAMID(0x7))>>SIM_SDID_SUBFAMID_SHIFT) 
   \                     ??cpu_identify_6: (+1)
   \   0000004C   0x....             LDR      R0,??DataTable1_1  ;; 0x40048024
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0x0E00             LSRS     R0,R0,#+24
   \   00000052   0x0740             LSLS     R0,R0,#+29       ;; ZeroExtS R0,R0,#+29,#+29
   \   00000054   0x0F40             LSRS     R0,R0,#+29
   \   00000056   0x2802             CMP      R0,#+2
   \   00000058   0xD007             BEQ      ??cpu_identify_7
   \   0000005A   0xD31A             BCC      ??cpu_identify_8
   \   0000005C   0x2804             CMP      R0,#+4
   \   0000005E   0xD00C             BEQ      ??cpu_identify_9
   \   00000060   0xD307             BCC      ??cpu_identify_10
   \   00000062   0x2806             CMP      R0,#+6
   \   00000064   0xD011             BEQ      ??cpu_identify_11
   \   00000066   0xD30C             BCC      ??cpu_identify_12
   \   00000068   0xE013             B        ??cpu_identify_8
     96              {  
     97                case 0x2:
     98              		printf("2");
   \                     ??cpu_identify_7: (+1)
   \   0000006A   0x....             ADR      R0,??DataTable1_8  ;; "2"
   \   0000006C   0x.... 0x....      BL       printf
     99              		break;
   \   00000070   0xE012             B        ??cpu_identify_13
    100                case 0x3:
    101              		printf("3");
   \                     ??cpu_identify_10: (+1)
   \   00000072   0x....             ADR      R0,??DataTable2  ;; "3"
   \   00000074   0x.... 0x....      BL       printf
    102              		break;
   \   00000078   0xE00E             B        ??cpu_identify_13
    103              	case 0x4:
    104              		printf("4");
   \                     ??cpu_identify_9: (+1)
   \   0000007A   0x....             ADR      R0,??DataTable2_1  ;; "4"
   \   0000007C   0x.... 0x....      BL       printf
    105              		break;
   \   00000080   0xE00A             B        ??cpu_identify_13
    106              	case 0x5:
    107              		printf("5");
   \                     ??cpu_identify_12: (+1)
   \   00000082   0x....             ADR      R0,??DataTable2_2  ;; "5"
   \   00000084   0x.... 0x....      BL       printf
    108              		break;
   \   00000088   0xE006             B        ??cpu_identify_13
    109                case 0x6:
    110              		printf("6");
   \                     ??cpu_identify_11: (+1)
   \   0000008A   0x....             ADR      R0,??DataTable2_3  ;; "6"
   \   0000008C   0x.... 0x....      BL       printf
    111              		break;
   \   00000090   0xE002             B        ??cpu_identify_13
    112          	    default:
    113          		    printf("\nUnrecognized Kinetis sub-family device.\n");  
   \                     ??cpu_identify_8: (+1)
   \   00000092   0x....             LDR      R0,??DataTable2_4
   \   00000094   0x.... 0x....      BL       printf
    114          		    break;  	
    115              }
    116              
    117              printf("  ");
   \                     ??cpu_identify_13: (+1)
   \   00000098   0x....             ADR      R0,??DataTable2_5  ;; 0x20, 0x20, 0x00, 0x00
   \   0000009A   0x.... 0x....      BL       printf
    118              /* Determine the package size */
    119              switch((SIM_SDID & SIM_SDID_PINID(0xF))>>SIM_SDID_PINID_SHIFT) 
   \   0000009E   0x....             LDR      R0,??DataTable1_1  ;; 0x40048024
   \   000000A0   0x6800             LDR      R0,[R0, #+0]
   \   000000A2   0x0700             LSLS     R0,R0,#+28       ;; ZeroExtS R0,R0,#+28,#+28
   \   000000A4   0x0F00             LSRS     R0,R0,#+28
   \   000000A6   0x2800             CMP      R0,#+0
   \   000000A8   0xD012             BEQ      ??cpu_identify_14
   \   000000AA   0x2801             CMP      R0,#+1
   \   000000AC   0xD014             BEQ      ??cpu_identify_15
   \   000000AE   0x2802             CMP      R0,#+2
   \   000000B0   0xD016             BEQ      ??cpu_identify_16
   \   000000B2   0x2804             CMP      R0,#+4
   \   000000B4   0xD018             BEQ      ??cpu_identify_17
   \   000000B6   0x2805             CMP      R0,#+5
   \   000000B8   0xD01A             BEQ      ??cpu_identify_18
   \   000000BA   0x2806             CMP      R0,#+6
   \   000000BC   0xD01C             BEQ      ??cpu_identify_19
   \   000000BE   0x2807             CMP      R0,#+7
   \   000000C0   0xD01E             BEQ      ??cpu_identify_20
   \   000000C2   0x2808             CMP      R0,#+8
   \   000000C4   0xD020             BEQ      ??cpu_identify_21
   \   000000C6   0x2809             CMP      R0,#+9
   \   000000C8   0xD022             BEQ      ??cpu_identify_22
   \   000000CA   0x280A             CMP      R0,#+10
   \   000000CC   0xD024             BEQ      ??cpu_identify_23
   \   000000CE   0xE027             B        ??cpu_identify_24
    120              {  
    121                  case 0x0:
    122              		printf("16pin       ");
   \                     ??cpu_identify_14: (+1)
   \   000000D0   0x....             LDR      R0,??DataTable2_6
   \   000000D2   0x.... 0x....      BL       printf
    123              		break;
   \   000000D6   0xE026             B        ??cpu_identify_25
    124                  case 0x1:
    125              		printf("24pin       ");
   \                     ??cpu_identify_15: (+1)
   \   000000D8   0x....             LDR      R0,??DataTable2_7
   \   000000DA   0x.... 0x....      BL       printf
    126              		break; 
   \   000000DE   0xE022             B        ??cpu_identify_25
    127                  case 0x2:
    128              		printf("32pin       ");
   \                     ??cpu_identify_16: (+1)
   \   000000E0   0x....             LDR      R0,??DataTable2_8
   \   000000E2   0x.... 0x....      BL       printf
    129              		break;      
   \   000000E6   0xE01E             B        ??cpu_identify_25
    130                  case 0x4:
    131              		printf("48pin       ");
   \                     ??cpu_identify_17: (+1)
   \   000000E8   0x....             LDR      R0,??DataTable2_9
   \   000000EA   0x.... 0x....      BL       printf
    132              		break;
   \   000000EE   0xE01A             B        ??cpu_identify_25
    133              	case 0x5:
    134              		printf("64pin       ");
   \                     ??cpu_identify_18: (+1)
   \   000000F0   0x....             LDR      R0,??DataTable2_10
   \   000000F2   0x.... 0x....      BL       printf
    135              		break;
   \   000000F6   0xE016             B        ??cpu_identify_25
    136              	case 0x6:
    137              		printf("80pin       ");
   \                     ??cpu_identify_19: (+1)
   \   000000F8   0x....             LDR      R0,??DataTable2_11
   \   000000FA   0x.... 0x....      BL       printf
    138              		break;
   \   000000FE   0xE012             B        ??cpu_identify_25
    139              	case 0x7:
    140              		printf("81pin       ");
   \                     ??cpu_identify_20: (+1)
   \   00000100   0x....             LDR      R0,??DataTable2_12
   \   00000102   0x.... 0x....      BL       printf
    141              		break;
   \   00000106   0xE00E             B        ??cpu_identify_25
    142              	case 0x8:
    143              		printf("100pin      ");
   \                     ??cpu_identify_21: (+1)
   \   00000108   0x....             LDR      R0,??DataTable2_13
   \   0000010A   0x.... 0x....      BL       printf
    144              		break;
   \   0000010E   0xE00A             B        ??cpu_identify_25
    145              	case 0x9:
    146              		printf("121pin      ");
   \                     ??cpu_identify_22: (+1)
   \   00000110   0x....             LDR      R0,??DataTable2_14
   \   00000112   0x.... 0x....      BL       printf
    147              		break;
   \   00000116   0xE006             B        ??cpu_identify_25
    148              	case 0xA:
    149              		printf("144pin      ");
   \                     ??cpu_identify_23: (+1)
   \   00000118   0x....             LDR      R0,??DataTable2_15
   \   0000011A   0x.... 0x....      BL       printf
    150              		break;
   \   0000011E   0xE002             B        ??cpu_identify_25
    151          	default:
    152          		printf("\nUnrecognized Kinetis package code.      ");  
   \                     ??cpu_identify_24: (+1)
   \   00000120   0x....             LDR      R0,??DataTable2_16
   \   00000122   0x.... 0x....      BL       printf
    153          		break;  	
    154              }
    155              
    156              /* Determine Attribute ID */
    157             /*
    158              switch((SIM_SDID & SIM_SDID_ATTRID(0x7))>>SIM_SDID_ATTRID_SHIFT) 
    159              {  
    160              	case 0x1:
    161              		printf(" Low Power Line with Cortex M0+\n\n");
    162              		break;
    163          	default:
    164          		printf("\nUnrecognized Kinetis family attribute.\n");  
    165          		break;  	
    166              }
    167              */
    168              /* Determine the System SRAM Size */
    169              switch((SIM_SDID & SIM_SDID_SRAMSIZE(0x7))>>SIM_SDID_SRAMSIZE_SHIFT) 
   \                     ??cpu_identify_25: (+1)
   \   00000126   0x....             LDR      R0,??DataTable1_1  ;; 0x40048024
   \   00000128   0x6800             LDR      R0,[R0, #+0]
   \   0000012A   0x0C00             LSRS     R0,R0,#+16
   \   0000012C   0x0740             LSLS     R0,R0,#+29       ;; ZeroExtS R0,R0,#+29,#+29
   \   0000012E   0x0F40             LSRS     R0,R0,#+29
   \   00000130   0x2800             CMP      R0,#+0
   \   00000132   0xD00B             BEQ      ??cpu_identify_26
   \   00000134   0x2802             CMP      R0,#+2
   \   00000136   0xD011             BEQ      ??cpu_identify_27
   \   00000138   0xD30C             BCC      ??cpu_identify_28
   \   0000013A   0x2804             CMP      R0,#+4
   \   0000013C   0xD016             BEQ      ??cpu_identify_29
   \   0000013E   0xD311             BCC      ??cpu_identify_30
   \   00000140   0x2806             CMP      R0,#+6
   \   00000142   0xD01B             BEQ      ??cpu_identify_31
   \   00000144   0xD316             BCC      ??cpu_identify_32
   \   00000146   0x2807             CMP      R0,#+7
   \   00000148   0xD01C             BEQ      ??cpu_identify_33
   \   0000014A   0xE01F             B        ??cpu_identify_34
    170              {  
    171              	case 0x0:
    172                    printf("SRAM Size: 0.5 KB\n");
   \                     ??cpu_identify_26: (+1)
   \   0000014C   0x....             LDR      R0,??DataTable2_17
   \   0000014E   0x.... 0x....      BL       printf
    173              		break;
   \   00000152   0xE01E             B        ??cpu_identify_35
    174                  case 0x1:
    175                    printf("SRAM Size:  1 KB\n");
   \                     ??cpu_identify_28: (+1)
   \   00000154   0x....             LDR      R0,??DataTable2_18
   \   00000156   0x.... 0x....      BL       printf
    176                    break;
   \   0000015A   0xE01A             B        ??cpu_identify_35
    177                  case 0x2:
    178                    printf("SRAM Size:  2 KB\n");
   \                     ??cpu_identify_27: (+1)
   \   0000015C   0x....             LDR      R0,??DataTable2_19
   \   0000015E   0x.... 0x....      BL       printf
    179                    break;
   \   00000162   0xE016             B        ??cpu_identify_35
    180                  case 0x3:
    181                    printf("SRAM Size:  4 KB\n");
   \                     ??cpu_identify_30: (+1)
   \   00000164   0x....             LDR      R0,??DataTable2_20
   \   00000166   0x.... 0x....      BL       printf
    182                    break;
   \   0000016A   0xE012             B        ??cpu_identify_35
    183                  case 0x4:
    184                    printf("SRAM Size:  8 KB\n");
   \                     ??cpu_identify_29: (+1)
   \   0000016C   0x....             LDR      R0,??DataTable2_21
   \   0000016E   0x.... 0x....      BL       printf
    185                    break;
   \   00000172   0xE00E             B        ??cpu_identify_35
    186                  case 0x5:
    187                    printf("SRAM Size:  16 KB\n");
   \                     ??cpu_identify_32: (+1)
   \   00000174   0x....             LDR      R0,??DataTable2_22
   \   00000176   0x.... 0x....      BL       printf
    188                    break;
   \   0000017A   0xE00A             B        ??cpu_identify_35
    189                  case 0x6:
    190                    printf("SRAM Size:  32 KB\n");
   \                     ??cpu_identify_31: (+1)
   \   0000017C   0x....             LDR      R0,??DataTable2_23
   \   0000017E   0x.... 0x....      BL       printf
    191                    break;
   \   00000182   0xE006             B        ??cpu_identify_35
    192                  case 0x7:
    193                    printf("SRAM Size:  64 KB\n");
   \                     ??cpu_identify_33: (+1)
   \   00000184   0x....             LDR      R0,??DataTable2_24
   \   00000186   0x.... 0x....      BL       printf
    194                    break;
   \   0000018A   0xE002             B        ??cpu_identify_35
    195          	default:
    196          		printf("\nUnrecognized SRAM Size.\n");  
   \                     ??cpu_identify_34: (+1)
   \   0000018C   0x....             LDR      R0,??DataTable2_25
   \   0000018E   0x.... 0x....      BL       printf
    197          		break;  	
    198              }                
    199          
    200              /* Determine the revision ID */
    201              temp = ((SIM_SDID_REVID(0xF))>>SIM_SDID_REVID_SHIFT);
   \                     ??cpu_identify_35: (+1)
   \   00000192   0x210F             MOVS     R1,#+15
    202              printf("Silicon rev %d\n", temp);
   \   00000194   0xB289             UXTH     R1,R1
   \   00000196   0x....             LDR      R0,??DataTable2_26
   \   00000198   0x.... 0x....      BL       printf
    203              
    204              /* Determine the flash revision */
    205          //    flash_identify();    
    206              
    207              /* Determine the P-flash size */
    208              switch((SIM_FCFG1 & SIM_FCFG1_PFSIZE(0xF))>>SIM_FCFG1_PFSIZE_SHIFT)
   \   0000019C   0x....             LDR      R0,??DataTable2_27  ;; 0x4004804c
   \   0000019E   0x6800             LDR      R0,[R0, #+0]
   \   000001A0   0x0E00             LSRS     R0,R0,#+24
   \   000001A2   0x0700             LSLS     R0,R0,#+28       ;; ZeroExtS R0,R0,#+28,#+28
   \   000001A4   0x0F00             LSRS     R0,R0,#+28
   \   000001A6   0x2800             CMP      R0,#+0
   \   000001A8   0xD00C             BEQ      ??cpu_identify_36
   \   000001AA   0x2801             CMP      R0,#+1
   \   000001AC   0xD00E             BEQ      ??cpu_identify_37
   \   000001AE   0x2803             CMP      R0,#+3
   \   000001B0   0xD010             BEQ      ??cpu_identify_38
   \   000001B2   0x2805             CMP      R0,#+5
   \   000001B4   0xD012             BEQ      ??cpu_identify_39
   \   000001B6   0x2807             CMP      R0,#+7
   \   000001B8   0xD014             BEQ      ??cpu_identify_40
   \   000001BA   0x2809             CMP      R0,#+9
   \   000001BC   0xD016             BEQ      ??cpu_identify_41
   \   000001BE   0x280F             CMP      R0,#+15
   \   000001C0   0xD018             BEQ      ??cpu_identify_42
   \   000001C2   0xE01B             B        ??cpu_identify_43
    209              {
    210            	case 0x0:
    211              		printf("Flash size:  8 KB program flash, 0.25 KB protection region\n");
   \                     ??cpu_identify_36: (+1)
   \   000001C4   0x....             LDR      R0,??DataTable2_28
   \   000001C6   0x.... 0x....      BL       printf
    212              		break;
   \   000001CA   0xE01A             B        ??cpu_identify_44
    213              	case 0x1:
    214              		printf("Flash size:  16 KB program flash, 0.5 KB protection region\n");
   \                     ??cpu_identify_37: (+1)
   \   000001CC   0x....             LDR      R0,??DataTable2_29
   \   000001CE   0x.... 0x....      BL       printf
    215              		break;
   \   000001D2   0xE016             B        ??cpu_identify_44
    216                  case 0x3:
    217              		printf("Flash size:  32 KB program flash, 1 KB protection region\n");
   \                     ??cpu_identify_38: (+1)
   \   000001D4   0x....             LDR      R0,??DataTable2_30
   \   000001D6   0x.... 0x....      BL       printf
    218              		break;
   \   000001DA   0xE012             B        ??cpu_identify_44
    219              	case 0x5:
    220              		printf("Flash size:  64 KB program flash, 2 KB protection region\n");
   \                     ??cpu_identify_39: (+1)
   \   000001DC   0x....             LDR      R0,??DataTable2_31
   \   000001DE   0x.... 0x....      BL       printf
    221              		break;
   \   000001E2   0xE00E             B        ??cpu_identify_44
    222                  case 0x7:
    223              		printf("Flash size:  128 KB program flash, 4 KB protection region\n");
   \                     ??cpu_identify_40: (+1)
   \   000001E4   0x....             LDR      R0,??DataTable2_32
   \   000001E6   0x.... 0x....      BL       printf
    224              		break;
   \   000001EA   0xE00A             B        ??cpu_identify_44
    225                  case 0x9:
    226              		printf("Flash size:  256 KB program flash, 8 KB protection region\n");
   \                     ??cpu_identify_41: (+1)
   \   000001EC   0x....             LDR      R0,??DataTable2_33
   \   000001EE   0x.... 0x....      BL       printf
    227              		break;
   \   000001F2   0xE006             B        ??cpu_identify_44
    228                  case 0xF:
    229              		printf("Flash size:  32 KB program flash, 1 KB protection region\n");
   \                     ??cpu_identify_42: (+1)
   \   000001F4   0x....             LDR      R0,??DataTable2_30
   \   000001F6   0x.... 0x....      BL       printf
    230              		break;
   \   000001FA   0xE002             B        ??cpu_identify_44
    231          	default:
    232          		printf("ERR!! Undefined flash size\n");  
   \                     ??cpu_identify_43: (+1)
   \   000001FC   0x....             LDR      R0,??DataTable2_34
   \   000001FE   0x.... 0x....      BL       printf
    233          		break;  	  		
    234              }
    235          }
   \                     ??cpu_identify_44: (+1)
   \   00000202   0xBD01             POP      {R0,PC}          ;; return
    236          /********************************************************************/
    237          /*!
    238           * \brief   flash Identify
    239           * \return  None
    240           *
    241           * This is primarly a reporting function that displays information
    242           * about the specific flash parameters and flash version ID for 
    243           * the current device. These parameters are obtained using a special
    244           * flash command call "read resource." The first four bytes returned
    245           * are the flash parameter revision, and the second four bytes are
    246           * the flash version ID.
    247           */

   \                                 In section .text, align 2, keep-with-next
    248          void flash_identify (void)
    249          {
   \                     flash_identify: (+1)
   \   00000000   0xB500             PUSH     {LR}
    250              /* Get the flash parameter version */
    251          
    252              /* Write the flash FCCOB registers with the values for a read resource command */
    253              FTFA_FCCOB0 = 0x03;
   \   00000002   0x2003             MOVS     R0,#+3
   \   00000004   0x....             LDR      R1,??DataTable2_35  ;; 0x40020007
   \   00000006   0x7008             STRB     R0,[R1, #+0]
    254              FTFA_FCCOB1 = 0x00;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x....             LDR      R1,??DataTable2_36  ;; 0x40020006
   \   0000000C   0x7008             STRB     R0,[R1, #+0]
    255              FTFA_FCCOB2 = 0x00;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x....             LDR      R1,??DataTable2_37  ;; 0x40020005
   \   00000012   0x7008             STRB     R0,[R1, #+0]
    256              FTFA_FCCOB3 = 0x00;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x....             LDR      R1,??DataTable2_38  ;; 0x40020004
   \   00000018   0x7008             STRB     R0,[R1, #+0]
    257              FTFA_FCCOB8 = 0x01;
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0x....             LDR      R1,??DataTable2_39  ;; 0x4002000f
   \   0000001E   0x7008             STRB     R0,[R1, #+0]
    258          
    259              /* All required FCCOBx registers are written, so launch the command */
    260              FTFA_FSTAT = FTFA_FSTAT_CCIF_MASK;
   \   00000020   0x2080             MOVS     R0,#+128
   \   00000022   0x....             LDR      R1,??DataTable2_40  ;; 0x40020000
   \   00000024   0x7008             STRB     R0,[R1, #+0]
    261          
    262              /* Wait for the command to complete */
    263              while(!(FTFA_FSTAT & FTFA_FSTAT_CCIF_MASK));
   \                     ??flash_identify_0: (+1)
   \   00000026   0x....             LDR      R0,??DataTable2_40  ;; 0x40020000
   \   00000028   0x7800             LDRB     R0,[R0, #+0]
   \   0000002A   0x0600             LSLS     R0,R0,#+24
   \   0000002C   0xD5FB             BPL      ??flash_identify_0
    264              
    265          //    printf("Flash parameter version %d.%d.%d.%d\n",FTFA_FCCOB4,FTFA_FCCOB5,FTFA_FCCOB6,FTFA_FCCOB7);
    266          
    267              /* Get the flash version ID */   
    268          
    269              /* Write the flash FCCOB registers with the values for a read resource command */
    270              FTFA_FCCOB0 = 0x03;
   \   0000002E   0x2003             MOVS     R0,#+3
   \   00000030   0x....             LDR      R1,??DataTable2_35  ;; 0x40020007
   \   00000032   0x7008             STRB     R0,[R1, #+0]
    271              FTFA_FCCOB1 = 0x00;
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0x....             LDR      R1,??DataTable2_36  ;; 0x40020006
   \   00000038   0x7008             STRB     R0,[R1, #+0]
    272              FTFA_FCCOB2 = 0x00;
   \   0000003A   0x2000             MOVS     R0,#+0
   \   0000003C   0x....             LDR      R1,??DataTable2_37  ;; 0x40020005
   \   0000003E   0x7008             STRB     R0,[R1, #+0]
    273              FTFA_FCCOB3 = 0x04;
   \   00000040   0x2004             MOVS     R0,#+4
   \   00000042   0x....             LDR      R1,??DataTable2_38  ;; 0x40020004
   \   00000044   0x7008             STRB     R0,[R1, #+0]
    274              FTFA_FCCOB8 = 0x01;
   \   00000046   0x2001             MOVS     R0,#+1
   \   00000048   0x....             LDR      R1,??DataTable2_39  ;; 0x4002000f
   \   0000004A   0x7008             STRB     R0,[R1, #+0]
    275          
    276              /* All required FCCOBx registers are written, so launch the command */
    277              FTFA_FSTAT = FTFA_FSTAT_CCIF_MASK;
   \   0000004C   0x2080             MOVS     R0,#+128
   \   0000004E   0x....             LDR      R1,??DataTable2_40  ;; 0x40020000
   \   00000050   0x7008             STRB     R0,[R1, #+0]
    278          
    279              /* Wait for the command to complete */
    280              while(!(FTFA_FSTAT & FTFA_FSTAT_CCIF_MASK));
   \                     ??flash_identify_1: (+1)
   \   00000052   0x....             LDR      R0,??DataTable2_40  ;; 0x40020000
   \   00000054   0x7800             LDRB     R0,[R0, #+0]
   \   00000056   0x0600             LSLS     R0,R0,#+24
   \   00000058   0xD5FB             BPL      ??flash_identify_1
    281          
    282          //    printf("Flash version ID %d.%d.%d.%d\n",FTFA_FCCOB4,FTFA_FCCOB5,FTFA_FCCOB6,FTFA_FCCOB7);  
    283          }
   \   0000005A   0xBD00             POP      {PC}             ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x40048100         DC32     0x40048100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x40048024         DC32     0x40048024

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x32 0x00          DC8      "2",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x33 0x00          DC8      "3",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x34 0x00          DC8      "4",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x35 0x00          DC8      "5",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x36 0x00          DC8      "6",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x20 0x20          DC8      0x20, 0x20, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     ?_13

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     ?_14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x........         DC32     ?_15

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x........         DC32     ?_16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x........         DC32     ?_17

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_11:
   \   00000000   0x........         DC32     ?_18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_12:
   \   00000000   0x........         DC32     ?_19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_13:
   \   00000000   0x........         DC32     ?_20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_14:
   \   00000000   0x........         DC32     ?_21

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_15:
   \   00000000   0x........         DC32     ?_22

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_16:
   \   00000000   0x........         DC32     ?_23

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_17:
   \   00000000   0x........         DC32     ?_24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_18:
   \   00000000   0x........         DC32     ?_25

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_19:
   \   00000000   0x........         DC32     ?_26

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_20:
   \   00000000   0x........         DC32     ?_27

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_21:
   \   00000000   0x........         DC32     ?_28

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_22:
   \   00000000   0x........         DC32     ?_29

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_23:
   \   00000000   0x........         DC32     ?_30

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_24:
   \   00000000   0x........         DC32     ?_31

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_25:
   \   00000000   0x........         DC32     ?_32

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_26:
   \   00000000   0x........         DC32     ?_33

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_27:
   \   00000000   0x4004804C         DC32     0x4004804c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_28:
   \   00000000   0x........         DC32     ?_34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_29:
   \   00000000   0x........         DC32     ?_35

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_30:
   \   00000000   0x........         DC32     ?_36

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_31:
   \   00000000   0x........         DC32     ?_37

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_32:
   \   00000000   0x........         DC32     ?_38

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_33:
   \   00000000   0x........         DC32     ?_39

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_34:
   \   00000000   0x........         DC32     ?_40

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_35:
   \   00000000   0x40020007         DC32     0x40020007

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_36:
   \   00000000   0x40020006         DC32     0x40020006

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_37:
   \   00000000   0x40020005         DC32     0x40020005

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_38:
   \   00000000   0x40020004         DC32     0x40020004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_39:
   \   00000000   0x4002000F         DC32     0x4002000f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_40:
   \   00000000   0x40020000         DC32     0x40020000

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x0A 0x4B          DC8 "\012KL0"
   \              0x4C 0x30    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x0A 0x4B          DC8 "\012KL1"
   \              0x4C 0x31    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x0A 0x4B          DC8 "\012KL2"
   \              0x4C 0x32    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x0A 0x4B          DC8 "\012KL3"
   \              0x4C 0x33    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x0A 0x4B          DC8 "\012KL4"
   \              0x4C 0x34    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x0A 0x55          DC8 "\012Unrecognized Kinetis family device.\012"
   \              0x6E 0x72    
   \              0x65 0x63    
   \              0x6F 0x67    
   \              0x6E 0x69    
   \              0x7A 0x65    
   \              0x64 0x20    
   \              0x4B 0x69    
   \              0x6E 0x65    
   \              0x74 0x69    
   \              0x73 0x20    
   \              0x66 0x61    
   \              0x6D 0x69    
   \              0x6C 0x79    
   \              0x20 0x64    
   \              0x65 0x76    
   \              0x69 0x63    
   \              0x65 0x2E    
   \              0x0A 0x00    
   \   00000026   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 2
   \   00000000   0x32 0x00          DC8 "2"

   \                                 In section .rodata, align 2
   \   00000000   0x33 0x00          DC8 "3"

   \                                 In section .rodata, align 2
   \   00000000   0x34 0x00          DC8 "4"

   \                                 In section .rodata, align 2
   \   00000000   0x35 0x00          DC8 "5"

   \                                 In section .rodata, align 2
   \   00000000   0x36 0x00          DC8 "6"

   \                                 In section .rodata, align 4
   \                     ?_11:
   \   00000000   0x0A 0x55          DC8 "\012Unrecognized Kinetis sub-family device.\012"
   \              0x6E 0x72    
   \              0x65 0x63    
   \              0x6F 0x67    
   \              0x6E 0x69    
   \              0x7A 0x65    
   \              0x64 0x20    
   \              0x4B 0x69    
   \              0x6E 0x65    
   \              0x74 0x69    
   \              0x73 0x20    
   \              0x73 0x75    
   \              0x62 0x2D    
   \              0x66 0x61    
   \              0x6D 0x69    
   \              0x6C 0x79    
   \              0x20 0x64    
   \              0x65 0x76    
   \              0x69 0x63    
   \              0x65 0x2E    
   \              0x0A 0x00    
   \   0000002A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   0x20 0x20          DC8 "  "
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_13:
   \   00000000   0x31 0x36          DC8 "16pin       "
   \              0x70 0x69    
   \              0x6E 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_14:
   \   00000000   0x32 0x34          DC8 "24pin       "
   \              0x70 0x69    
   \              0x6E 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_15:
   \   00000000   0x33 0x32          DC8 "32pin       "
   \              0x70 0x69    
   \              0x6E 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_16:
   \   00000000   0x34 0x38          DC8 "48pin       "
   \              0x70 0x69    
   \              0x6E 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_17:
   \   00000000   0x36 0x34          DC8 "64pin       "
   \              0x70 0x69    
   \              0x6E 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_18:
   \   00000000   0x38 0x30          DC8 "80pin       "
   \              0x70 0x69    
   \              0x6E 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_19:
   \   00000000   0x38 0x31          DC8 "81pin       "
   \              0x70 0x69    
   \              0x6E 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_20:
   \   00000000   0x31 0x30          DC8 "100pin      "
   \              0x30 0x70    
   \              0x69 0x6E    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_21:
   \   00000000   0x31 0x32          DC8 "121pin      "
   \              0x31 0x70    
   \              0x69 0x6E    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_22:
   \   00000000   0x31 0x34          DC8 "144pin      "
   \              0x34 0x70    
   \              0x69 0x6E    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_23:
   \   00000000   0x0A 0x55          DC8 "\012Unrecognized Kinetis package code.      "
   \              0x6E 0x72    
   \              0x65 0x63    
   \              0x6F 0x67    
   \              0x6E 0x69    
   \              0x7A 0x65    
   \              0x64 0x20    
   \              0x4B 0x69    
   \              0x6E 0x65    
   \              0x74 0x69    
   \              0x73 0x20    
   \              0x70 0x61    
   \              0x63 0x6B    
   \              0x61 0x67    
   \              0x65 0x20    
   \              0x63 0x6F    
   \              0x64 0x65    
   \              0x2E 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x00    
   \   0000002A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_24:
   \   00000000   0x53 0x52          DC8 "SRAM Size: 0.5 KB\012"
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x30    
   \              0x2E 0x35    
   \              0x20 0x4B    
   \              0x42 0x0A    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_25:
   \   00000000   0x53 0x52          DC8 "SRAM Size:  1 KB\012"
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x20    
   \              0x31 0x20    
   \              0x4B 0x42    
   \              0x0A 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_26:
   \   00000000   0x53 0x52          DC8 "SRAM Size:  2 KB\012"
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x20    
   \              0x32 0x20    
   \              0x4B 0x42    
   \              0x0A 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_27:
   \   00000000   0x53 0x52          DC8 "SRAM Size:  4 KB\012"
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x20    
   \              0x34 0x20    
   \              0x4B 0x42    
   \              0x0A 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_28:
   \   00000000   0x53 0x52          DC8 "SRAM Size:  8 KB\012"
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x20    
   \              0x38 0x20    
   \              0x4B 0x42    
   \              0x0A 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_29:
   \   00000000   0x53 0x52          DC8 "SRAM Size:  16 KB\012"
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x20    
   \              0x31 0x36    
   \              0x20 0x4B    
   \              0x42 0x0A    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_30:
   \   00000000   0x53 0x52          DC8 "SRAM Size:  32 KB\012"
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x20    
   \              0x33 0x32    
   \              0x20 0x4B    
   \              0x42 0x0A    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_31:
   \   00000000   0x53 0x52          DC8 "SRAM Size:  64 KB\012"
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x20    
   \              0x36 0x34    
   \              0x20 0x4B    
   \              0x42 0x0A    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_32:
   \   00000000   0x0A 0x55          DC8 "\012Unrecognized SRAM Size.\012"
   \              0x6E 0x72    
   \              0x65 0x63    
   \              0x6F 0x67    
   \              0x6E 0x69    
   \              0x7A 0x65    
   \              0x64 0x20    
   \              0x53 0x52    
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x2E    
   \              0x0A 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_33:
   \   00000000   0x53 0x69          DC8 "Silicon rev %d\012"
   \              0x6C 0x69    
   \              0x63 0x6F    
   \              0x6E 0x20    
   \              0x72 0x65    
   \              0x76 0x20    
   \              0x25 0x64    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_34:
   \   00000000   0x46 0x6C          DC8 46H, 6CH, 61H, 73H, 68H, 20H, 73H, 69H
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x73 0x69    
   \   00000008   0x7A 0x65          DC8 7AH, 65H, 3AH, 20H, 20H, 38H, 20H, 4BH
   \              0x3A 0x20    
   \              0x20 0x38    
   \              0x20 0x4B    
   \   00000010   0x42 0x20          DC8 42H, 20H, 70H, 72H, 6FH, 67H, 72H, 61H
   \              0x70 0x72    
   \              0x6F 0x67    
   \              0x72 0x61    
   \   00000018   0x6D 0x20          DC8 6DH, 20H, 66H, 6CH, 61H, 73H, 68H, 2CH
   \              0x66 0x6C    
   \              0x61 0x73    
   \              0x68 0x2C    
   \   00000020   0x20 0x30          DC8 20H, 30H, 2EH, 32H, 35H, 20H, 4BH, 42H
   \              0x2E 0x32    
   \              0x35 0x20    
   \              0x4B 0x42    
   \   00000028   0x20 0x70          DC8 20H, 70H, 72H, 6FH, 74H, 65H, 63H, 74H
   \              0x72 0x6F    
   \              0x74 0x65    
   \              0x63 0x74    
   \   00000030   0x69 0x6F          DC8 69H, 6FH, 6EH, 20H, 72H, 65H, 67H, 69H
   \              0x6E 0x20    
   \              0x72 0x65    
   \              0x67 0x69    
   \   00000038   0x6F 0x6E          DC8 6FH, 6EH, 0AH, 0
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_35:
   \   00000000   0x46 0x6C          DC8 46H, 6CH, 61H, 73H, 68H, 20H, 73H, 69H
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x73 0x69    
   \   00000008   0x7A 0x65          DC8 7AH, 65H, 3AH, 20H, 20H, 31H, 36H, 20H
   \              0x3A 0x20    
   \              0x20 0x31    
   \              0x36 0x20    
   \   00000010   0x4B 0x42          DC8 4BH, 42H, 20H, 70H, 72H, 6FH, 67H, 72H
   \              0x20 0x70    
   \              0x72 0x6F    
   \              0x67 0x72    
   \   00000018   0x61 0x6D          DC8 61H, 6DH, 20H, 66H, 6CH, 61H, 73H, 68H
   \              0x20 0x66    
   \              0x6C 0x61    
   \              0x73 0x68    
   \   00000020   0x2C 0x20          DC8 2CH, 20H, 30H, 2EH, 35H, 20H, 4BH, 42H
   \              0x30 0x2E    
   \              0x35 0x20    
   \              0x4B 0x42    
   \   00000028   0x20 0x70          DC8 20H, 70H, 72H, 6FH, 74H, 65H, 63H, 74H
   \              0x72 0x6F    
   \              0x74 0x65    
   \              0x63 0x74    
   \   00000030   0x69 0x6F          DC8 69H, 6FH, 6EH, 20H, 72H, 65H, 67H, 69H
   \              0x6E 0x20    
   \              0x72 0x65    
   \              0x67 0x69    
   \   00000038   0x6F 0x6E          DC8 6FH, 6EH, 0AH, 0
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_36:
   \   00000000   0x46 0x6C          DC8 46H, 6CH, 61H, 73H, 68H, 20H, 73H, 69H
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x73 0x69    
   \   00000008   0x7A 0x65          DC8 7AH, 65H, 3AH, 20H, 20H, 33H, 32H, 20H
   \              0x3A 0x20    
   \              0x20 0x33    
   \              0x32 0x20    
   \   00000010   0x4B 0x42          DC8 4BH, 42H, 20H, 70H, 72H, 6FH, 67H, 72H
   \              0x20 0x70    
   \              0x72 0x6F    
   \              0x67 0x72    
   \   00000018   0x61 0x6D          DC8 61H, 6DH, 20H, 66H, 6CH, 61H, 73H, 68H
   \              0x20 0x66    
   \              0x6C 0x61    
   \              0x73 0x68    
   \   00000020   0x2C 0x20          DC8 2CH, 20H, 31H, 20H, 4BH, 42H, 20H, 70H
   \              0x31 0x20    
   \              0x4B 0x42    
   \              0x20 0x70    
   \   00000028   0x72 0x6F          DC8 72H, 6FH, 74H, 65H, 63H, 74H, 69H, 6FH
   \              0x74 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \   00000030   0x6E 0x20          DC8 6EH, 20H, 72H, 65H, 67H, 69H, 6FH, 6EH
   \              0x72 0x65    
   \              0x67 0x69    
   \              0x6F 0x6E    
   \   00000038   0x0A 0x00          DC8 0AH, 0
   \   0000003A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_37:
   \   00000000   0x46 0x6C          DC8 46H, 6CH, 61H, 73H, 68H, 20H, 73H, 69H
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x73 0x69    
   \   00000008   0x7A 0x65          DC8 7AH, 65H, 3AH, 20H, 20H, 36H, 34H, 20H
   \              0x3A 0x20    
   \              0x20 0x36    
   \              0x34 0x20    
   \   00000010   0x4B 0x42          DC8 4BH, 42H, 20H, 70H, 72H, 6FH, 67H, 72H
   \              0x20 0x70    
   \              0x72 0x6F    
   \              0x67 0x72    
   \   00000018   0x61 0x6D          DC8 61H, 6DH, 20H, 66H, 6CH, 61H, 73H, 68H
   \              0x20 0x66    
   \              0x6C 0x61    
   \              0x73 0x68    
   \   00000020   0x2C 0x20          DC8 2CH, 20H, 32H, 20H, 4BH, 42H, 20H, 70H
   \              0x32 0x20    
   \              0x4B 0x42    
   \              0x20 0x70    
   \   00000028   0x72 0x6F          DC8 72H, 6FH, 74H, 65H, 63H, 74H, 69H, 6FH
   \              0x74 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \   00000030   0x6E 0x20          DC8 6EH, 20H, 72H, 65H, 67H, 69H, 6FH, 6EH
   \              0x72 0x65    
   \              0x67 0x69    
   \              0x6F 0x6E    
   \   00000038   0x0A 0x00          DC8 0AH, 0
   \   0000003A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_38:
   \   00000000   0x46 0x6C          DC8 46H, 6CH, 61H, 73H, 68H, 20H, 73H, 69H
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x73 0x69    
   \   00000008   0x7A 0x65          DC8 7AH, 65H, 3AH, 20H, 20H, 31H, 32H, 38H
   \              0x3A 0x20    
   \              0x20 0x31    
   \              0x32 0x38    
   \   00000010   0x20 0x4B          DC8 20H, 4BH, 42H, 20H, 70H, 72H, 6FH, 67H
   \              0x42 0x20    
   \              0x70 0x72    
   \              0x6F 0x67    
   \   00000018   0x72 0x61          DC8 72H, 61H, 6DH, 20H, 66H, 6CH, 61H, 73H
   \              0x6D 0x20    
   \              0x66 0x6C    
   \              0x61 0x73    
   \   00000020   0x68 0x2C          DC8 68H, 2CH, 20H, 34H, 20H, 4BH, 42H, 20H
   \              0x20 0x34    
   \              0x20 0x4B    
   \              0x42 0x20    
   \   00000028   0x70 0x72          DC8 70H, 72H, 6FH, 74H, 65H, 63H, 74H, 69H
   \              0x6F 0x74    
   \              0x65 0x63    
   \              0x74 0x69    
   \   00000030   0x6F 0x6E          DC8 6FH, 6EH, 20H, 72H, 65H, 67H, 69H, 6FH
   \              0x20 0x72    
   \              0x65 0x67    
   \              0x69 0x6F    
   \   00000038   0x6E 0x0A          DC8 6EH, 0AH, 0
   \              0x00         
   \   0000003B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_39:
   \   00000000   0x46 0x6C          DC8 46H, 6CH, 61H, 73H, 68H, 20H, 73H, 69H
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x73 0x69    
   \   00000008   0x7A 0x65          DC8 7AH, 65H, 3AH, 20H, 20H, 32H, 35H, 36H
   \              0x3A 0x20    
   \              0x20 0x32    
   \              0x35 0x36    
   \   00000010   0x20 0x4B          DC8 20H, 4BH, 42H, 20H, 70H, 72H, 6FH, 67H
   \              0x42 0x20    
   \              0x70 0x72    
   \              0x6F 0x67    
   \   00000018   0x72 0x61          DC8 72H, 61H, 6DH, 20H, 66H, 6CH, 61H, 73H
   \              0x6D 0x20    
   \              0x66 0x6C    
   \              0x61 0x73    
   \   00000020   0x68 0x2C          DC8 68H, 2CH, 20H, 38H, 20H, 4BH, 42H, 20H
   \              0x20 0x38    
   \              0x20 0x4B    
   \              0x42 0x20    
   \   00000028   0x70 0x72          DC8 70H, 72H, 6FH, 74H, 65H, 63H, 74H, 69H
   \              0x6F 0x74    
   \              0x65 0x63    
   \              0x74 0x69    
   \   00000030   0x6F 0x6E          DC8 6FH, 6EH, 20H, 72H, 65H, 67H, 69H, 6FH
   \              0x20 0x72    
   \              0x65 0x67    
   \              0x69 0x6F    
   \   00000038   0x6E 0x0A          DC8 6EH, 0AH, 0
   \              0x00         
   \   0000003B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_40:
   \   00000000   0x45 0x52          DC8 "ERR!! Undefined flash size\012"
   \              0x52 0x21    
   \              0x21 0x20    
   \              0x55 0x6E    
   \              0x64 0x65    
   \              0x66 0x69    
   \              0x6E 0x65    
   \              0x64 0x20    
   \              0x66 0x6C    
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x73 0x69    
   \              0x7A 0x65    
   \              0x0A 0x00    
    284          /********************************************************************/
    285          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   SystemInit
         8   -> start
       8   cpu_identify
         8   -> printf
       4   flash_identify
       8   start
         8   -> common_startup
         8   -> cpu_identify
         8   -> main
         8   -> outSRS
         8   -> sysinit


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_11
       4  ??DataTable2_12
       4  ??DataTable2_13
       4  ??DataTable2_14
       4  ??DataTable2_15
       4  ??DataTable2_16
       4  ??DataTable2_17
       4  ??DataTable2_18
       4  ??DataTable2_19
       4  ??DataTable2_2
       4  ??DataTable2_20
       4  ??DataTable2_21
       4  ??DataTable2_22
       4  ??DataTable2_23
       4  ??DataTable2_24
       4  ??DataTable2_25
       4  ??DataTable2_26
       4  ??DataTable2_27
       4  ??DataTable2_28
       4  ??DataTable2_29
       4  ??DataTable2_3
       4  ??DataTable2_30
       4  ??DataTable2_31
       4  ??DataTable2_32
       4  ??DataTable2_33
       4  ??DataTable2_34
       4  ??DataTable2_35
       4  ??DataTable2_36
       4  ??DataTable2_37
       4  ??DataTable2_38
       4  ??DataTable2_39
       4  ??DataTable2_4
       4  ??DataTable2_40
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
       8  ?_0
       8  ?_1
       2  ?_10
      44  ?_11
       4  ?_12
      16  ?_13
      16  ?_14
      16  ?_15
      16  ?_16
      16  ?_17
      16  ?_18
      16  ?_19
       8  ?_2
      16  ?_20
      16  ?_21
      16  ?_22
      44  ?_23
      20  ?_24
      20  ?_25
      20  ?_26
      20  ?_27
      20  ?_28
      20  ?_29
       8  ?_3
      20  ?_30
      20  ?_31
      28  ?_32
      16  ?_33
      60  ?_34
      60  ?_35
      60  ?_36
      60  ?_37
      60  ?_38
      60  ?_39
       8  ?_4
      28  ?_40
      40  ?_5
       2  ?_6
       2  ?_7
       2  ?_8
       2  ?_9
       8  SystemInit
     516  cpu_identify
      92  flash_identify
      30  start

 
 934 bytes in section .rodata
 846 bytes in section .text
 
 846 bytes of CODE  memory
 934 bytes of CONST memory

Errors: none
Warnings: 1
