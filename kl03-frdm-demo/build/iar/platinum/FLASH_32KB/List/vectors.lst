###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        22/Feb/2016  16:12:27
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\b51443\Desktop\kl03-frdm-demo\kl03-frdm-demo\src\cpu\vectors.c
#    Command line =  
#        C:\Users\b51443\Desktop\kl03-frdm-demo\kl03-frdm-demo\src\cpu\vectors.c
#        -D IAR -D FREEDOM -lCN
#        C:\Users\b51443\Desktop\kl03-frdm-demo\kl03-frdm-demo\build\iar\platinum\FLASH_32KB\List\
#        -o
#        C:\Users\b51443\Desktop\kl03-frdm-demo\kl03-frdm-demo\build\iar\platinum\FLASH_32KB\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\b51443\Desktop\kl03-frdm-demo\kl03-frdm-demo\build\iar\platinum\..\..\..\src\projects\platinum\
#        -I
#        C:\Users\b51443\Desktop\kl03-frdm-demo\kl03-frdm-demo\build\iar\platinum\..\..\..\src\common\
#        -I
#        C:\Users\b51443\Desktop\kl03-frdm-demo\kl03-frdm-demo\build\iar\platinum\..\..\..\src\cpu\
#        -I
#        C:\Users\b51443\Desktop\kl03-frdm-demo\kl03-frdm-demo\build\iar\platinum\..\..\..\src\cpu\headers\
#        -I
#        C:\Users\b51443\Desktop\kl03-frdm-demo\kl03-frdm-demo\build\iar\platinum\..\..\..\src\drivers\lptmr\
#        -I
#        C:\Users\b51443\Desktop\kl03-frdm-demo\kl03-frdm-demo\build\iar\platinum\..\..\..\src\drivers\mcg\
#        -I
#        C:\Users\b51443\Desktop\kl03-frdm-demo\kl03-frdm-demo\build\iar\platinum\..\..\..\src\drivers\pmc\
#        -I
#        C:\Users\b51443\Desktop\kl03-frdm-demo\kl03-frdm-demo\build\iar\platinum\..\..\..\src\drivers\rcm\
#        -I
#        C:\Users\b51443\Desktop\kl03-frdm-demo\kl03-frdm-demo\build\iar\platinum\..\..\..\src\drivers\smc\
#        -I
#        C:\Users\b51443\Desktop\kl03-frdm-demo\kl03-frdm-demo\build\iar\platinum\..\..\..\src\drivers\uart\
#        -I
#        C:\Users\b51443\Desktop\kl03-frdm-demo\kl03-frdm-demo\build\iar\platinum\..\..\..\src\drivers\wdog\
#        -I
#        C:\Users\b51443\Desktop\kl03-frdm-demo\kl03-frdm-demo\build\iar\platinum\..\..\..\src\drivers\cmp\
#        -I
#        C:\Users\b51443\Desktop\kl03-frdm-demo\kl03-frdm-demo\build\iar\platinum\..\..\..\src\platforms\
#        -I
#        C:\Users\b51443\Desktop\kl03-frdm-demo\kl03-frdm-demo\build\iar\platinum\..\
#        -Ol --use_c++_inline
#    List file    =  
#        C:\Users\b51443\Desktop\kl03-frdm-demo\kl03-frdm-demo\build\iar\platinum\FLASH_32KB\List\vectors.lst
#    Object file  =  
#        C:\Users\b51443\Desktop\kl03-frdm-demo\kl03-frdm-demo\build\iar\platinum\FLASH_32KB\Obj\vectors.o
#
###############################################################################

C:\Users\b51443\Desktop\kl03-frdm-demo\kl03-frdm-demo\src\cpu\vectors.c
      1          /******************************************************************************
      2          * File:    vectors.c
      3          *
      4          * Purpose: Configure interrupt vector table for Kinetis.
      5          ******************************************************************************/
      6          
      7          #include "vectors.h"
      8          #include "isr.h"
      9          #include "common.h"
     10          
     11          /******************************************************************************
     12          * Vector Table
     13          ******************************************************************************/
     14          typedef void (*vector_entry)(void);
     15          
     16          #ifdef KEIL
     17          #else
     18          #pragma location = ".intvec"

   \                                 In section .intvec, align 4
     19          const vector_entry  __vector_table[] = //@ ".intvec" =
   \                     __vector_table:
   \   00000000   0x........         DC32 __BOOT_STACK_ADDRESS, __startup, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000010   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000024   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000038   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   0000004C   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000060   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000074   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000088   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   0000009C   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000000B0   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000000C4   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000000D8   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000000EC   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000100   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000114   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000128   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   0000013C   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000150   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000164   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000178   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   0000018C   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000001A0   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000001B4   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000001C8   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000001DC   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000001F0   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000204   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000218   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   0000022C   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000240   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000254   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000268   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   0000027C   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000290   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000002A4   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000002B8   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000002CC   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000002E0   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000002F4   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000308   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   0000031C   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000330   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000344   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000358   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   0000036C   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000380   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000394   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000003A8   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000003BC   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000003D0   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000003E4   0x........         DC32 default_isr, default_isr, default_isr, default_isr, default_isr
   \              0x........   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000003F8   0x........         DC32 default_isr, default_isr, 0FFFFFFFFH, 0FFFFFFFFH, 0FFFFFFFFH
   \              0x........   
   \              0xFFFFFFFF   
   \              0xFFFFFFFF   
   \              0xFFFFFFFF   
   \   0000040C   0xFFFFFFFE         DC32 0FFFFFFFEH
     20          #endif
     21          {
     22             VECTOR_000,           /* Initial SP           */
     23             VECTOR_001,           /* Initial PC           */
     24             VECTOR_002,
     25             VECTOR_003,
     26             VECTOR_004,
     27             VECTOR_005,
     28             VECTOR_006,
     29             VECTOR_007,
     30             VECTOR_008,
     31             VECTOR_009,
     32             VECTOR_010,
     33             VECTOR_011,
     34             VECTOR_012,
     35             VECTOR_013,
     36             VECTOR_014,
     37             VECTOR_015,
     38             VECTOR_016,
     39             VECTOR_017,
     40             VECTOR_018,
     41             VECTOR_019,
     42             VECTOR_020,
     43             VECTOR_021,
     44             VECTOR_022,
     45             VECTOR_023,
     46             VECTOR_024,
     47             VECTOR_025,
     48             VECTOR_026,
     49             VECTOR_027,
     50             VECTOR_028,
     51             VECTOR_029,
     52             VECTOR_030,
     53             VECTOR_031,
     54             VECTOR_032,
     55             VECTOR_033,
     56             VECTOR_034,
     57             VECTOR_035,
     58             VECTOR_036,
     59             VECTOR_037,
     60             VECTOR_038,
     61             VECTOR_039,
     62             VECTOR_040,
     63             VECTOR_041,
     64             VECTOR_042,
     65             VECTOR_043,
     66             VECTOR_044,
     67             VECTOR_045,
     68             VECTOR_046,
     69             VECTOR_047,
     70             VECTOR_048,
     71             VECTOR_049,
     72             VECTOR_050,
     73             VECTOR_051,
     74             VECTOR_052,
     75             VECTOR_053,
     76             VECTOR_054,
     77             VECTOR_055,
     78             VECTOR_056,
     79             VECTOR_057,
     80             VECTOR_058,
     81             VECTOR_059,
     82             VECTOR_060,
     83             VECTOR_061,
     84             VECTOR_062,
     85             VECTOR_063,
     86             VECTOR_064,
     87             VECTOR_065,
     88             VECTOR_066,
     89             VECTOR_067,
     90             VECTOR_068,
     91             VECTOR_069,
     92             VECTOR_070,
     93             VECTOR_071,
     94             VECTOR_072,
     95             VECTOR_073,
     96             VECTOR_074,
     97             VECTOR_075,
     98             VECTOR_076,
     99             VECTOR_077,
    100             VECTOR_078,
    101             VECTOR_079,
    102             VECTOR_080,
    103             VECTOR_081,
    104             VECTOR_082,
    105             VECTOR_083,
    106             VECTOR_084,
    107             VECTOR_085,
    108             VECTOR_086,
    109             VECTOR_087,
    110             VECTOR_088,
    111             VECTOR_089,
    112             VECTOR_090,
    113             VECTOR_091,
    114             VECTOR_092,
    115             VECTOR_093,
    116             VECTOR_094,
    117             VECTOR_095,
    118             VECTOR_096,
    119             VECTOR_097,
    120             VECTOR_098,
    121             VECTOR_099,
    122             VECTOR_100,
    123             VECTOR_101,
    124             VECTOR_102,
    125             VECTOR_103,
    126             VECTOR_104,
    127             VECTOR_105,
    128             VECTOR_106,
    129             VECTOR_107,
    130             VECTOR_108,
    131             VECTOR_109,
    132             VECTOR_110,
    133             VECTOR_111,
    134             VECTOR_112,
    135             VECTOR_113,
    136             VECTOR_114,
    137             VECTOR_115,
    138             VECTOR_116,
    139             VECTOR_117,
    140             VECTOR_118,
    141             VECTOR_119,
    142             VECTOR_120,
    143             VECTOR_121,
    144             VECTOR_122,
    145             VECTOR_123,
    146             VECTOR_124,
    147             VECTOR_125,
    148             VECTOR_126,
    149             VECTOR_127,
    150             VECTOR_128,
    151             VECTOR_129,
    152             VECTOR_130,
    153             VECTOR_131,
    154             VECTOR_132,
    155             VECTOR_133,
    156             VECTOR_134,
    157             VECTOR_135,
    158             VECTOR_136,
    159             VECTOR_137,
    160             VECTOR_138,
    161             VECTOR_139,
    162             VECTOR_140,
    163             VECTOR_141,
    164             VECTOR_142,
    165             VECTOR_143,
    166             VECTOR_144,
    167             VECTOR_145,
    168             VECTOR_146,
    169             VECTOR_147,
    170             VECTOR_148,
    171             VECTOR_149,
    172             VECTOR_150,
    173             VECTOR_151,
    174             VECTOR_152,
    175             VECTOR_153,
    176             VECTOR_154,
    177             VECTOR_155,
    178             VECTOR_156,
    179             VECTOR_157,
    180             VECTOR_158,
    181             VECTOR_159,
    182             VECTOR_160,
    183             VECTOR_161,
    184             VECTOR_162,
    185             VECTOR_163,
    186             VECTOR_164,
    187             VECTOR_165,
    188             VECTOR_166,
    189             VECTOR_167,
    190             VECTOR_168,
    191             VECTOR_169,
    192             VECTOR_170,
    193             VECTOR_171,
    194             VECTOR_172,
    195             VECTOR_173,
    196             VECTOR_174,
    197             VECTOR_175,
    198             VECTOR_176,
    199             VECTOR_177,
    200             VECTOR_178,
    201             VECTOR_179,
    202             VECTOR_180,
    203             VECTOR_181,
    204             VECTOR_182,
    205             VECTOR_183,
    206             VECTOR_184,
    207             VECTOR_185,
    208             VECTOR_186,
    209             VECTOR_187,
    210             VECTOR_188,
    211             VECTOR_189,
    212             VECTOR_190,
    213             VECTOR_191,
    214             VECTOR_192,
    215             VECTOR_193,
    216             VECTOR_194,
    217             VECTOR_195,
    218             VECTOR_196,
    219             VECTOR_197,
    220             VECTOR_198,
    221             VECTOR_199,
    222             VECTOR_200,
    223             VECTOR_201,
    224             VECTOR_202,
    225             VECTOR_203,
    226             VECTOR_204,
    227             VECTOR_205,
    228             VECTOR_206,
    229             VECTOR_207,
    230             VECTOR_208,
    231             VECTOR_209,
    232             VECTOR_210,
    233             VECTOR_211,
    234             VECTOR_212,
    235             VECTOR_213,
    236             VECTOR_214,
    237             VECTOR_215,
    238             VECTOR_216,
    239             VECTOR_217,
    240             VECTOR_218,
    241             VECTOR_219,
    242             VECTOR_220,
    243             VECTOR_221,
    244             VECTOR_222,
    245             VECTOR_223,
    246             VECTOR_224,
    247             VECTOR_225,
    248             VECTOR_226,
    249             VECTOR_227,
    250             VECTOR_228,
    251             VECTOR_229,
    252             VECTOR_230,
    253             VECTOR_231,
    254             VECTOR_232,
    255             VECTOR_233,
    256             VECTOR_234,
    257             VECTOR_235,
    258             VECTOR_236,
    259             VECTOR_237,
    260             VECTOR_238,
    261             VECTOR_239,
    262             VECTOR_240,
    263             VECTOR_241,
    264             VECTOR_242,
    265             VECTOR_243,
    266             VECTOR_244,
    267             VECTOR_245,
    268             VECTOR_246,
    269             VECTOR_247,
    270             VECTOR_248,
    271             VECTOR_249,
    272             VECTOR_250,
    273             VECTOR_251,
    274             VECTOR_252,
    275             VECTOR_253,
    276             VECTOR_254,
    277             VECTOR_255,
    278          #ifdef BOOTLOADER_USER
    279          #else
    280             CONFIG_1,
    281             CONFIG_2,
    282             CONFIG_3,
    283             CONFIG_4,
    284          #endif
    285          };
    286          // VECTOR_TABLE end
    287          /******************************************************************************
    288          * default_isr(void)
    289          *
    290          * Default ISR definition.
    291          *
    292          * In:  n/a
    293          * Out: n/a
    294          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    295          void default_isr(void)
    296          {
   \                     default_isr: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    297             #define VECTORNUM                     (*(volatile uint8_t*)(0xE000ED04))
    298          
    299             printf("\n****default_isr entered on vector %d*****\r\n\n",VECTORNUM);
   \   00000002   0x....             LDR      R0,??DataTable0  ;; 0xe000ed04
   \   00000004   0x7801             LDRB     R1,[R0, #+0]
   \   00000006   0xB2C9             UXTB     R1,R1
   \   00000008   0x....             LDR      R0,??DataTable0_1
   \   0000000A   0x.... 0x....      BL       printf
    300             return;
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return
    301          }
    302          
    303          /******************************************************************************/
    304          /* Exception frame without floating-point storage 
    305           * hard fault handler in C,
    306           * with stack frame location as input parameter
    307           */

   \                                 In section .text, align 2, keep-with-next
    308          void 
    309          hard_fault_handler_c(unsigned int * hardfault_args)
    310          {
    311              /*  
    312              unsigned int stacked_r0;
    313              unsigned int stacked_r1;
    314              unsigned int stacked_r2;
    315              unsigned int stacked_r3;
    316              unsigned int stacked_r12;
    317              unsigned int stacked_lr;
    318              unsigned int stacked_pc;
    319              unsigned int stacked_psr;
    320              
    321              //Exception stack frame
    322              stacked_r0 = ((unsigned long) hardfault_args[0]);
    323              stacked_r1 = ((unsigned long) hardfault_args[1]);
    324              stacked_r2 = ((unsigned long) hardfault_args[2]);
    325              stacked_r3 = ((unsigned long) hardfault_args[3]);
    326              
    327              stacked_r12 = ((unsigned long) hardfault_args[4]);
    328              stacked_lr = ((unsigned long) hardfault_args[5]);
    329              stacked_pc = ((unsigned long) hardfault_args[6]);
    330              stacked_psr = ((unsigned long) hardfault_args[7]);
    331          
    332              printf ("[Hard fault handler]\n");
    333              printf ("R0 = %x\n", stacked_r0);
    334              printf ("R1 = %x\n", stacked_r1);
    335              printf ("R2 = %x\n", stacked_r2);
    336              printf ("R3 = %x\n", stacked_r3);
    337              printf ("R12 = %x\n", stacked_r12);
    338              printf ("LR = %x\n", stacked_lr);
    339              printf ("PC = %x\n", stacked_pc);
    340              printf ("PSR = %x\n", stacked_psr);
    341              printf ("BFAR = %x\n", (*((volatile unsigned long *)(0xE000ED38))));
    342              printf ("CFSR = %x\n", (*((volatile unsigned long *)(0xE000ED28))));
    343              printf ("HFSR = %x\n", (*((volatile unsigned long *)(0xE000ED2C))));
    344              printf ("DFSR = %x\n", (*((volatile unsigned long *)(0xE000ED30))));
    345              printf ("AFSR = %x\n", (*((volatile unsigned long *)(0xE000ED3C))));
    346             */ 
    347              //for(;;)
    348              //;/*infinite loop*/
    349          } 
   \                     hard_fault_handler_c: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0xE000ED04         DC32     0xe000ed04

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x0A 0x2A          DC8 "\012****default_isr entered on vector %d*****\015\012\012"
   \              0x2A 0x2A    
   \              0x2A 0x64    
   \              0x65 0x66    
   \              0x61 0x75    
   \              0x6C 0x74    
   \              0x5F 0x69    
   \              0x73 0x72    
   \              0x20 0x65    
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x65 0x64    
   \              0x20 0x6F    
   \              0x6E 0x20    
   \              0x76 0x65    
   \              0x63 0x74    
   \              0x6F 0x72    
   \              0x20 0x25    
   \              0x64 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x0D 0x0A    
   \              0x0A 0x00    
   \   0000002E   0x00 0x00          DC8 0, 0
    350          
    351          /* End of "vectors.c" */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   default_isr
         8   -> printf
       0   hard_fault_handler_c


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
      48  ?_0
    1040  __vector_table
      16  default_isr
       2  hard_fault_handler_c

 
 1 040 bytes in section .intvec
    48 bytes in section .rodata
    26 bytes in section .text
 
    26 bytes of CODE  memory
 1 088 bytes of CONST memory

Errors: none
Warnings: none
